{"ast":null,"code":"import _slicedToArray from \"/Users/andrew/Desktop/CS506 Project/fifa_dream_team/DraftPageReact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrew/Desktop/CS506 Project/fifa_dream_team/DraftPageReact/src/DraftPageMaster.js\";\nimport React from 'react';\nimport Formation from './Formation';\nimport { CurrentDraft } from './CurrentDraft';\nimport PlayerDatabase from './Components/Database.jsx';\nimport PlayerTeam from './Components/PlayerTeam.jsx';\nimport Button from '@material-ui/core/Button';\nimport firebase from './Firebase/firebase';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { create } from 'domain';\n/** This is an arrow function to set up the Dialog/Confirmation popup to draft a player they clicked on\n * @author goethel\n * @param {\n * DialogState:boolean\n * handleClose:function (from parent component)\n * } params \n * CHANGES\n * 11/11 - Function Created, Code moved outside of class to avoid Hook errors with react - goethel\n */\n\nexport const DialogBox = params => {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  if (params.props.DialogState == true && open == false) {\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n    params.props.handleClose();\n  };\n\n  const handleConfirmed = () => {\n    setOpen(false);\n    params.props.handleConfirmDraft();\n  };\n\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Draft This Player?\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, params.props.player.NAME, \"\\n\", params.props.player.RATING)), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleConfirmed,\n    color: \"primary\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Draft\")));\n};\nconst numPlayers = 30; // This is to allow for testing/development, so that we do not run over our server quota by pulling the whole database every time. Will be increased to top 2000 during demos\n\nconst data = require('./Player.json');\n/** This is the parent Component of all the components in the Draft Page, so that state can be shared easily\n * \n * @author shivi \n * \n * CHANGELOG\n * 11/01 Updated with documentation and a button linking to results page for testing - goethel\n * 10/30 Component Created - shivi\n */\n\n\nclass DraftPageMaster extends React.Component {\n  constructor(props) {\n    // This is where you should grab the settings from index browser storage to use throughout draft\n    super(props);\n    this.state = {\n      rows: [],\n      t1: [],\n      t2: [],\n      t3: [],\n      t4: [],\n      t5: [],\n      t6: [],\n      NumPlayersTeam: localStorage.getItem(\"index_numplayers\"),\n      // Number of players per team\n      numTeams: localStorage.getItem(\"index_numteams\"),\n      // Number of teams\n      DialogState: false,\n      curPlayerSelected: \"\",\n      // The player that the user double clicked on\n      draftedPlayer: \"\",\n      // This variable will update with the last drafted player\n      curTeam: 1,\n      // Allows Players to select which team drafts first\n      teamNames: [],\n      // Team name of current team\n      draftType: localStorage.getItem(\"index_roundtrans\"),\n      // Snake or Normal draft\n      snakeDraftSide: 1,\n      // Snake going forward round (1234) or backwards round (4321)\n      pickNum: 1,\n      // CUrrent Pick #\n      dev: false,\n      topBarList: [] // List of players on the top bar\n\n    }; // Any function used in callback must be bound here or React will not work with them\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleConfirmDraft = this.handleConfirmDraft.bind(this);\n  }\n  /** This function grabs the X number of players from firebase, and by default sorts by overall or rating\n   * \n   * @author goethel \n   * \n   * CHANGELOG\n   * 11/5 - added option for local DB usage - goethel\n   * 11/2 - file created - goethel\n   */\n\n\n  componentDidMount() {\n    // var myData = Object.keys(data).map(key => {\n    //     if(!(data[key].CLUB == \"Icons\")) {\n    //         return data[key];\n    //     }\n    //     else {\n    //         delete data[key];\n    //     }\n    // })\n    var that = this;\n\n    if (this.state.dev == true) {\n      var mostViewedPosts = firebase.database().ref('Players').orderByChild('RATING').limitToLast(numPlayers).once(\"value\").then(function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          var childData = childSnapshot.val(); // This is where checks for Drafted players will occur\n\n          that.setState({\n            rows: [...that.state.rows, childData]\n          });\n        });\n      });\n    }\n\n    if (localStorage.getItem(\"index_numplayers\") != null) {\n      this.setState({\n        rows: data,\n        NumPlayersTeam: localStorage.getItem(\"index_numplayers\"),\n        numTeams: localStorage.getItem(\"index_numteams\")\n      });\n    } else {\n      debugger;\n      this.setState({\n        rows: data,\n        numTeams: 6,\n        NumPlayersTeam: 12,\n        draftType: \"repeating\"\n      });\n      this.fallbackNames();\n    }\n  }\n\n  fallbackNames() {\n    let fallback = [];\n\n    for (let i = 1; i <= this.state.numTeams; ++i) {\n      fallback[i] = \"Team \" + i;\n    }\n\n    this.setState({\n      teamNames: fallback\n    });\n  }\n  /** This handles the initial opening of the DialogBox after the user double clicks on a player in the Data Grid\n   * \n   */\n\n\n  handleClick(event) {\n    this.gridApi = event.api;\n    this.rowNode = event.node;\n    this.setState({\n      DialogState: true,\n      curPlayerSelected: event.data\n    });\n  }\n  /** This function closes the dialog box, if the user clicks cancel\n   * \n   * \n   * 11/11 - Function Created\n   */\n\n\n  handleClose() {\n    this.setState({\n      DialogState: false\n    });\n  }\n  /** This function adds the most recent drafted player onm the top bar.\n   * \n   * @author Shivi\n   * \n   * 11/14 - Function Created\n   */\n\n\n  createDraftedList(player) {\n    var cardInfo = {};\n    cardInfo.playerNum = 0;\n    cardInfo.playerDrafted = player;\n    let list = this.state.topBarList;\n\n    if (list.length === this.state.numTeams) {\n      list.shift();\n      list.push(player);\n    } else {\n      list.push(player);\n    }\n  }\n  /** This function adds the drafted player to the correct team\n   * @author goethel\n   * \n   * 11/13 - Function Created\n   */\n\n\n  addPlayerToTeam() {\n    let team = this.state.curTeam;\n    this.createDraftedList(this.state.curPlayerSelected);\n\n    if (team == 1) {\n      this.setState({\n        t1: this.state.t1.concat(this.state.curPlayerSelected)\n      });\n    } else if (team == 2) {\n      this.setState({\n        t2: this.state.t2.concat(this.state.curPlayerSelected)\n      });\n    } else if (team == 3) {\n      this.setState({\n        t3: this.state.t3.concat(this.state.curPlayerSelected)\n      });\n    } else if (team == 4) {\n      this.setState({\n        t4: this.state.t4.concat(this.state.curPlayerSelected)\n      });\n    } else if (team == 5) {\n      this.setState({\n        t5: this.state.t5.concat(this.state.curPlayerSelected)\n      });\n    } else if (team == 6) {\n      this.setState({\n        t6: this.state.t6.concat(this.state.curPlayerSelected)\n      });\n    }\n  }\n  /** This function removes a drafted player from the data grid\n   * \n   */\n\n\n  onRemoveSelected() {\n    var res = this.gridApi.updateRowData({\n      remove: [this.rowNode.data]\n    });\n    console.log(res);\n  }\n  /** This is the function where the switchover code for changing who is drafting should occur\n   * \n   */\n\n\n  handleConfirmDraft() {\n    this.setState({\n      DialogState: false,\n      pickNum: this.state.pickNum + 1,\n      draftedPlayer: this.state.curPlayerSelected\n    });\n    this.addPlayerToTeam();\n\n    if (this.isDraftDone() == true) {\n      this.DraftFinished();\n    } else {\n      if (this.state.draftType == \"repeating\") {\n        if (this.state.curTeam == this.state.numTeams) {\n          this.setState({\n            curTeam: 1\n          });\n        } else {\n          this.setState({\n            curTeam: this.state.curTeam + 1\n          });\n        }\n      } // Code for evaluating next pick in snake draft\n      else if (this.state.draftType == \"snake\") {\n          console.log(this.state.curTeam + \", forward/back:\" + this.state.snakeDraftSide); // debug\n\n          if (this.state.snakeDraftSide == 1) {\n            if (this.state.curTeam == this.state.numTeams) {\n              this.setState({\n                snakeDraftSide: 0\n              });\n            } else {\n              this.setState({\n                curTeam: this.state.curTeam + 1\n              });\n            }\n          } else {\n            if (this.state.curTeam == 1) {\n              this.setState({\n                snakeDraftSide: 1\n              });\n            } else {\n              this.setState({\n                curTeam: this.state.curTeam - 1\n              });\n            }\n          }\n        } // Code for switching to next pick\n\n    }\n\n    if (this.state.curPlayerSelected != \"\") {\n      this.onRemoveSelected();\n    }\n  }\n  /** This function will check if Draft is Done or not, treat as js function\n   * \n   */\n\n\n  isDraftDone() {\n    if (this.state.pickNum >= this.state.numTeams * this.state.NumPlayersTeam) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  /** This Function handles the eventual switchover to Results Page, and stores the Team data into the local browser storage to be used by the Results Page\n   * \n   */\n\n\n  DraftFinished() {\n    // Place finished teams here.\n    localStorage.setItem(\"draft_t1\", JSON.stringify(this.state.t1));\n    localStorage.setItem(\"draft_t2\", JSON.stringify(this.state.t2));\n    localStorage.setItem(\"draft_t3\", JSON.stringify(this.state.t3));\n    localStorage.setItem(\"draft_t4\", JSON.stringify(this.state.t4));\n    localStorage.setItem(\"draft_t5\", JSON.stringify(this.state.t5));\n    localStorage.setItem(\"draft_t6\", JSON.stringify(this.state.t6));\n    window.location.href = \"../../tradingpage.html\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(CurrentDraft, {\n      playerList: this.state.topBarList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, this.state.teamNames[this.state.curTeam], \" currently drafting\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Pick Number \", this.state.pickNum)), React.createElement(\"div\", {\n      className: \"draft-Body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(DialogBox, {\n      props: {\n        DialogState: this.state.DialogState,\n        handleClose: this.handleClose,\n        handleConfirmDraft: this.handleConfirmDraft,\n        player: this.state.curPlayerSelected\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(PlayerDatabase, {\n      props: {\n        rows: this.state.rows,\n        handleClick: this.handleClick\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Formation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(PlayerTeam, {\n      curTeam: this.state.curTeam,\n      t1: this.state.t1,\n      t2: this.state.t2,\n      t3: this.state.t3,\n      t4: this.state.t4,\n      t5: this.state.t5,\n      t6: this.state.t6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Button, {\n      href: \"../../tradingpage.html\",\n      color: \"primary\",\n      variant: \"contained\",\n      className: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Results Page (TESTING ONLY)\")), React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Built with React.js\"));\n  }\n\n  currentDraft() {}\n\n}\n\nexport default DraftPageMaster;","map":{"version":3,"sources":["/Users/andrew/Desktop/CS506 Project/fifa_dream_team/DraftPageReact/src/DraftPageMaster.js"],"names":["React","Formation","CurrentDraft","PlayerDatabase","PlayerTeam","Button","firebase","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","create","DialogBox","params","useState","open","setOpen","props","DialogState","handleClose","handleConfirmed","handleConfirmDraft","player","NAME","RATING","numPlayers","data","require","DraftPageMaster","Component","constructor","state","rows","t1","t2","t3","t4","t5","t6","NumPlayersTeam","localStorage","getItem","numTeams","curPlayerSelected","draftedPlayer","curTeam","teamNames","draftType","snakeDraftSide","pickNum","dev","topBarList","handleClick","bind","componentDidMount","that","mostViewedPosts","database","ref","orderByChild","limitToLast","once","then","snapshot","forEach","childSnapshot","childData","val","setState","fallbackNames","fallback","i","event","gridApi","api","rowNode","node","createDraftedList","cardInfo","playerNum","playerDrafted","list","length","shift","push","addPlayerToTeam","team","concat","onRemoveSelected","res","updateRowData","remove","console","log","isDraftDone","DraftFinished","setItem","JSON","stringify","window","location","href","render","currentDraft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Formation from './Formation';\nimport {CurrentDraft} from './CurrentDraft';\nimport PlayerDatabase from './Components/Database.jsx';\nimport PlayerTeam from './Components/PlayerTeam.jsx';\nimport Button from '@material-ui/core/Button';\nimport firebase from './Firebase/firebase'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { create } from 'domain';\n\n\n/** This is an arrow function to set up the Dialog/Confirmation popup to draft a player they clicked on\n * @author goethel\n * @param {\n * DialogState:boolean\n * handleClose:function (from parent component)\n * } params \n * CHANGES\n * 11/11 - Function Created, Code moved outside of class to avoid Hook errors with react - goethel\n */\nexport const DialogBox = (params) => {\n    const [open, setOpen] = React.useState(false);\n    \nif(params.props.DialogState == true && open == false) {\n    setOpen(true);\n}\nconst  handleClose = () => {\n    setOpen(false);\n    params.props.handleClose();\n}\nconst  handleConfirmed = () => {\n    setOpen(false);\n    params.props.handleConfirmDraft();\n}\n    return(<Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    >\n    <DialogTitle id=\"alert-dialog-title\">{\"Draft This Player?\"}</DialogTitle>\n    <DialogContent>\n      <DialogContentText id=\"alert-dialog-description\">\n        {params.props.player.NAME}{\"\\n\"}\n        {params.props.player.RATING}\n      </DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        Cancel\n      </Button>\n      <Button onClick={handleConfirmed} color=\"primary\" autoFocus>\n        Draft\n      </Button>\n    </DialogActions>\n    </Dialog>);\n}\n\nconst numPlayers = 30; // This is to allow for testing/development, so that we do not run over our server quota by pulling the whole database every time. Will be increased to top 2000 during demos\nconst data=require('./Player.json');\n/** This is the parent Component of all the components in the Draft Page, so that state can be shared easily\n * \n * @author shivi \n * \n * CHANGELOG\n * 11/01 Updated with documentation and a button linking to results page for testing - goethel\n * 10/30 Component Created - shivi\n */\nclass DraftPageMaster extends React.Component {\n    \n    constructor(props) {\n        // This is where you should grab the settings from index browser storage to use throughout draft\n        super(props);\n        this.state = {\n\t\trows:[],\n                t1:[],\n                t2:[],\n                t3:[],\n                t4:[],\n                t5:[],\n                t6:[],\n                \n        NumPlayersTeam: localStorage.getItem(\"index_numplayers\"), // Number of players per team\n        numTeams: localStorage.getItem(\"index_numteams\"), // Number of teams\n        DialogState:false,\n        curPlayerSelected:\"\", // The player that the user double clicked on\n        draftedPlayer:\"\", // This variable will update with the last drafted player\n        curTeam:1, // Allows Players to select which team drafts first\n        teamNames: [], // Team name of current team\n        draftType: localStorage.getItem(\"index_roundtrans\"), // Snake or Normal draft\n        snakeDraftSide:1, // Snake going forward round (1234) or backwards round (4321)\n        pickNum:1, // CUrrent Pick #\n        dev:false,\n        topBarList: [] // List of players on the top bar\n        }\n    \n    // Any function used in callback must be bound here or React will not work with them\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleConfirmDraft = this.handleConfirmDraft.bind(this);\n    }\n    /** This function grabs the X number of players from firebase, and by default sorts by overall or rating\n     * \n     * @author goethel \n     * \n     * CHANGELOG\n     * 11/5 - added option for local DB usage - goethel\n     * 11/2 - file created - goethel\n     */\n    componentDidMount() {\n\n        // var myData = Object.keys(data).map(key => {\n        //     if(!(data[key].CLUB == \"Icons\")) {\n        //         return data[key];\n        //     }\n        //     else {\n        //         delete data[key];\n        //     }\n        // })\n        var that = this;\n        \n        if(this.state.dev == true) {\n        var mostViewedPosts = firebase.database().ref('Players').orderByChild('RATING').limitToLast(numPlayers).once(\"value\").then(function(snapshot){\n            snapshot.forEach(function (childSnapshot) {\n                var childData = childSnapshot.val();\n                // This is where checks for Drafted players will occur\n                that.setState({rows:[...that.state.rows,childData]});\n            });\n        });   \n        } \n        if(localStorage.getItem(\"index_numplayers\") != null) {\n            this.setState({rows:data,NumPlayersTeam:localStorage.getItem(\"index_numplayers\"),numTeams:localStorage.getItem(\"index_numteams\")});\n        }\n       else {\n           debugger;\n           this.setState({rows:data,numTeams:6,NumPlayersTeam:12,draftType:\"repeating\"});\n           this.fallbackNames();\n       }\n     \n    }\n    fallbackNames() {\n        let fallback = [];\n        for(let i = 1; i <= this.state.numTeams;++i) {\n            fallback[i] = \"Team \"+i;\n        }\n        this.setState({teamNames:fallback});\n    }\n    /** This handles the initial opening of the DialogBox after the user double clicks on a player in the Data Grid\n     * \n     */\n    handleClick(event) {\n\n       this.gridApi = event.api;\n        this.rowNode = event.node;\n        this.setState({DialogState:true,curPlayerSelected:event.data})\n    }\n    /** This function closes the dialog box, if the user clicks cancel\n     * \n     * \n     * 11/11 - Function Created\n     */\n    handleClose() {\n        this.setState({DialogState:false})\n    }\n\n    /** This function adds the most recent drafted player onm the top bar.\n     * \n     * @author Shivi\n     * \n     * 11/14 - Function Created\n     */\n    createDraftedList(player){\n        var cardInfo = {};\n        cardInfo.playerNum = 0;\n        cardInfo.playerDrafted = player;\n        let list = this.state.topBarList;\n        if(list.length === this.state.numTeams){\n            list.shift();\n            list.push(player);\n        }\n        else{\n            list.push(player);\n        }\n\n    }\n\n\n    /** This function adds the drafted player to the correct team\n     * @author goethel\n     * \n     * 11/13 - Function Created\n     */\n    addPlayerToTeam() {\n        let team = this.state.curTeam;\n        this.createDraftedList(this.state.curPlayerSelected);\n        if(team ==1) {\n            this.setState({t1:(this.state.t1.concat(this.state.curPlayerSelected))});\n        }\n        else if(team ==2) {\n            this.setState({t2:(this.state.t2.concat(this.state.curPlayerSelected))});\n        }\n        else if(team ==3) {\n            this.setState({t3:(this.state.t3.concat(this.state.curPlayerSelected))});\n        }\n        else if(team ==4) {\n            this.setState({t4:(this.state.t4.concat(this.state.curPlayerSelected))});\n        }\n        else if(team ==5) {\n            this.setState({t5:(this.state.t5.concat(this.state.curPlayerSelected))});\n        }\n        else if(team ==6) {\n            this.setState({t6:(this.state.t6.concat(this.state.curPlayerSelected))});\n        }\n    }\n    /** This function removes a drafted player from the data grid\n     * \n     */\n    onRemoveSelected() {\n        var res = this.gridApi.updateRowData({ remove: [this.rowNode.data] });\n        console.log(res);\n      }\n    /** This is the function where the switchover code for changing who is drafting should occur\n     * \n     */\n    handleConfirmDraft() {\n        this.setState({DialogState:false,pickNum:(this.state.pickNum+1),draftedPlayer:this.state.curPlayerSelected});\n        this.addPlayerToTeam();\n        if(this.isDraftDone() == true) {\n            this.DraftFinished();\n        }\n        else {\n            if(this.state.draftType == \"repeating\") {\n                if(this.state.curTeam==this.state.numTeams) {\n                    this.setState({curTeam:1});\n                }\n                else {\n                    this.setState({curTeam:(this.state.curTeam+1)});\n                }\n            }\n            // Code for evaluating next pick in snake draft\n            else if(this.state.draftType == \"snake\") {\n                console.log(this.state.curTeam+\", forward/back:\"+this.state.snakeDraftSide); // debug\n                    if(this.state.snakeDraftSide == 1) {\n                        if(this.state.curTeam == this.state.numTeams) {\n                            this.setState({snakeDraftSide:0})\n                        }\n                        else {\n                        this.setState({curTeam:(this.state.curTeam+1)});\n                        }\n                    }\n                    else {\n                        if(this.state.curTeam == 1) {\n                            this.setState({snakeDraftSide:1})\n                        }\n                        else {\n                        this.setState({curTeam:(this.state.curTeam-1)});\n                        }\n                    }\n                \n            }\n            // Code for switching to next pick\n            \n            }   \n            if(this.state.curPlayerSelected != \"\") {\n                this.onRemoveSelected();\n               }\n            \n    }\n    /** This function will check if Draft is Done or not, treat as js function\n     * \n     */\n    isDraftDone() {\n        if(this.state.pickNum >= this.state.numTeams*this.state.NumPlayersTeam) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /** This Function handles the eventual switchover to Results Page, and stores the Team data into the local browser storage to be used by the Results Page\n     * \n     */\n    DraftFinished() {\n        // Place finished teams here.\n        localStorage.setItem(\"draft_t1\", JSON.stringify(this.state.t1));\n        localStorage.setItem(\"draft_t2\", JSON.stringify(this.state.t2));\n        localStorage.setItem(\"draft_t3\", JSON.stringify(this.state.t3));\n        localStorage.setItem(\"draft_t4\", JSON.stringify(this.state.t4));\n        localStorage.setItem(\"draft_t5\", JSON.stringify(this.state.t5));\n        localStorage.setItem(\"draft_t6\", JSON.stringify(this.state.t6));\n\n        window.location.href=\"../../tradingpage.html\";\n    }\n    render() {\n        return(\n            <div className=\"App\">\n                <CurrentDraft playerList={this.state.topBarList}/>\n                <header className=\"App-header\">\n                    <h1>\n                    {this.state.teamNames[this.state.curTeam]} currently drafting\n                    </h1>\n                    <h2>Pick Number {this.state.pickNum}</h2>\n                </header>\n                <div className=\"draft-Body\">\n                \n                    <DialogBox props={{DialogState:this.state.DialogState,handleClose:this.handleClose,handleConfirmDraft:this.handleConfirmDraft,player:this.state.curPlayerSelected}}></DialogBox>\n                    \n                    \n                    <PlayerDatabase props={{rows:this.state.rows,handleClick:this.handleClick}}></PlayerDatabase>\n                    <div>\n                    <Formation/>\n                    <PlayerTeam curTeam={this.state.curTeam} t1={this.state.t1} t2={this.state.t2} t3={this.state.t3} t4={this.state.t4} t5={this.state.t5} t6={this.state.t6}></PlayerTeam>\n                    </div>\n                    \n                </div>\n                <div>\n                <Button href=\"../../tradingpage.html\" color=\"primary\" variant=\"contained\" className=\"results\">Results Page (TESTING ONLY)</Button>\n                </div>\n                \n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    Built with React.js\n                 </a>\n            </div>\n        )\n    }\n    currentDraft(){\n\n    }\n}\n\nexport default DraftPageMaster;"]},"metadata":{},"sourceType":"module"}
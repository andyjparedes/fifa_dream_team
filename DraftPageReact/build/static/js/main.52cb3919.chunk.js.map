{"version":3,"sources":["logo.svg","Formation.js","CurrentDraft.js","Components/Database.jsx","Components/PlayerTeam.jsx","DraftPageMaster.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Formation","React","Component","CurrentDraft","this","getPlayers","currentList","numOfPlayers","count","columns","field","headerName","PlayerDatabase","props","state","rows","NAME","CLUB","LEAGUE","POSITION","TIER","RATING","PACE","SHOOTING","PASSING","DRIBBLING","DEFENDING","PHYSICAL","LOADDATE","header","className","style","height","width","columnDefs","rowData","onGridReady","params","api","sizeColumnsToFit","gridApi","DraftPageMaster","Button","href","color","variant","target","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mJAAAA,EAAOC,QAAU,IAA0B,kC,kKCW5BC,E,iLAPP,OACI,kC,GAHYC,IAAMC,WC+BfC,E,iLA5BP,OACI,6BACKC,KAAKC,WAAW,CAAC,UAAW,SAAU,M,iCAKxCC,EAAaC,GACpB,IACIC,EAAQ,EAFqB,uBAGjC,IAAI,IAAJ,IAAoBF,EAApB,+CAAgC,SACzBE,IAAUD,IACTC,EAAQ,GAEZA,KAP6B,kFAiBjC,MAhBe,O,GAVIP,IAAMC,W,QCO3BO,G,cAAU,CACZ,CAAEC,MAAO,OAAQC,WAAY,QAC7B,CAAED,MAAO,SAAUC,WAAY,WAC/B,CAAED,MAAO,WAAYC,WAAY,YACpC,CAAED,MAAO,OAAQC,WAAY,QAC7B,CAAED,MAAO,WAAYC,WAAY,cASXC,E,YACnB,WAAYC,GAAQ,IAAD,8BACrB,4CAAMA,KACDC,MAAQ,CACZC,KAAM,CACL,CACCC,KAAM,UACNC,KAAM,QACNC,OAAQ,QACRC,SAAU,MACVC,KAAM,OACNC,OAAQ,KACRC,KAAM,KACNC,SAAU,KACVC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,SAAU,uBAEX,CACCZ,KAAM,iBACNC,KAAM,QACNC,OAAQ,QACRC,SAAU,MACVC,KAAM,OACNC,OAAQ,KACRC,KAAM,KACNC,SAAU,KACVC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,SAAU,uBAEX,CACCZ,KAAM,UACNC,KAAM,QACNC,OAAQ,QACRC,SAAU,KACVC,KAAM,OACNC,OAAQ,KACRC,KAAM,KACNC,SAAU,KACVC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,SAAU,uBAEX,CACCZ,KAAM,UACNC,KAAM,QACNC,OAAQ,QACRC,SAAU,KACVC,KAAM,OACNC,OAAQ,KACRC,KAAM,KACNC,SAAU,KACVC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,SAAU,uBAEX,CACCZ,KAAM,iBACNC,KAAM,QACNC,OAAQ,QACRC,SAAU,MACVC,KAAM,OACNC,OAAQ,KACRC,KAAM,KACNC,SAAU,KACVC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,SAAU,uBAEX,CACCZ,KAAM,UACNC,KAAM,QACNC,OAAQ,QACRC,SAAU,KACVC,KAAM,OACNC,OAAQ,KACRC,KAAM,KACNC,SAAU,KACVC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,SAAU,uBAEX,CACCZ,KAAM,aACNC,KAAM,QACNC,OAAQ,QACRC,SAAU,KACVC,KAAM,OACNC,OAAQ,KACRC,KAAM,KACNC,SAAU,KACVC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,SAAU,yBA3GQ,E,uEAoHTC,M,+BAMN,OACL,yBACAC,UAAU,uBACVC,MAAO,CACPC,OAAQ,OACRC,MAAO,SAEP,kBAAC,cAAD,CACEC,WAAYzB,EACZ0B,QAAS/B,KAAKU,MAAMC,KAAMqB,YAAa,SAACC,GAAWA,EAAOC,IAAIC,2B,GApIrBrC,aCbxCO,EAAU,CACZ,CAAEC,MAAO,OAAQC,WAAY,QAC7B,CAAED,MAAO,SAAUC,WAAY,WAClC,CAAED,MAAO,WAAYC,WAAY,aAaXC,E,YACnB,WAAYC,GAAQ,IAAD,8BACrB,4CAAMA,KACDC,MAAQ,CACZC,KAAM,CACL,CACCC,KAAM,QACNC,KAAM,eACNC,OAAQ,OACRC,SAAU,KACVC,KAAM,OACNC,OAAQ,KACRC,KAAM,KACNC,SAAU,KACVC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,SAAU,yBAjBQ,E,uEA0BTC,M,kCAMZzB,KAAKoC,QAAQD,qB,+BAGP,OACL,yBACAT,UAAU,uBACVC,MAAO,CACPC,OAAQ,OACRC,MAAO,SACP,kBAAC,cAAD,CACEC,WAAYzB,EACZ0B,QAAS/B,KAAKU,MAAMC,KAAMqB,YAAa,SAACC,GAAWA,EAAOC,IAAIC,2B,GA5CrBrC,a,SCwB/BuC,E,iLAnCP,OACI,yBAAKX,UAAU,OACX,4BAAQA,UAAU,cACd,oEAIJ,0BAAMA,UAAU,cACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAGJ,6BACA,kBAACY,EAAA,EAAD,CAAQC,KAAK,wBAAwBC,MAAM,UAAUC,QAAQ,YAAYf,UAAU,WAAnF,gCAGA,uBACIA,UAAU,WACVa,KAAK,sBACLG,OAAO,SACPC,IAAI,uBAJR,0B,6CApBc9C,IAAMC,WCHrB8C,MANf,WACE,OACE,kBAAC,EAAD,OCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.52cb3919.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\n\nclass Formation extends React.Component {\n    render() {\n        return(\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default Formation;","import React from 'react';\n//import Card from 'react-bootstrap/Card';\n\nclass CurrentDraft extends React.Component {\n    render() {\n        return(\n            <div>\n                {this.getPlayers([\"Ronaldo\", \"Messi\"], 4)}\n            </div>\n        )\n    }\n\n    getPlayers(currentList, numOfPlayers){\n        var tempList = [];\n        var count = 0;\n        for(const player of currentList){\n            if(count === numOfPlayers){\n                count = 0;\n            }\n            count++;\n            // tempList.push(\n            //     <Card>\n            //         <Card.Body>\n            //             <Card.Title>Player {count}</Card.Title>\n            //             <Card.Subtitle>{player.name}</Card.Subtitle>\n            //         </Card.Body>\n            //     </Card>\n            // )\n        }\n        return tempList;\n    }\n}\n\nexport default CurrentDraft;","//import firebase from '../Firebase/firebase';\nimport React,{Component} from 'react';\nimport {AgGridReact} from 'ag-grid-react'\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham-dark.css';\n//var database = firebase.database();\n\n/** Column config, field = name in JSON, headerName = how you would like to display it on website\n * \n */\nconst columns = [\n    { field: 'NAME', headerName: 'Name', },\n    { field: 'RATING', headerName: 'Overall' },\n    { field: 'POSITION', headerName: 'Position' },\n\t{ field: 'PACE', headerName: 'Pace' },\n\t{ field: 'SHOOTING', headerName: 'Shooting' } ];\n/** This is the main class for displaying the player database for the Draft Page\n *  \n * @author goethel\n * @param props default props for a react component\n * \n * Changelog:\n * 10/25 - file and class created - goethel\n */\n  export default class PlayerDatabase extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tNAME: \"Pelé\",\n\t\t\t\t\tCLUB: \"Icons\",\n\t\t\t\t\tLEAGUE: \"Icons\",\n\t\t\t\t\tPOSITION: \"CAM\",\n\t\t\t\t\tTIER: \"Gold\",\n\t\t\t\t\tRATING: \"98\",\n\t\t\t\t\tPACE: \"95\",\n\t\t\t\t\tSHOOTING: \"96\",\n\t\t\t\t\tPASSING: \"93\",\n\t\t\t\t\tDRIBBLING: \"96\",\n\t\t\t\t\tDEFENDING: \"60\",\n\t\t\t\t\tPHYSICAL: \"76\",\n\t\t\t\t\tLOADDATE: \"2018-09-19 12:10:05\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tNAME: \"Diego Maradona\",\n\t\t\t\t\tCLUB: \"Icons\",\n\t\t\t\t\tLEAGUE: \"Icons\",\n\t\t\t\t\tPOSITION: \"CAM\",\n\t\t\t\t\tTIER: \"Gold\",\n\t\t\t\t\tRATING: \"97\",\n\t\t\t\t\tPACE: \"92\",\n\t\t\t\t\tSHOOTING: \"93\",\n\t\t\t\t\tPASSING: \"92\",\n\t\t\t\t\tDRIBBLING: \"97\",\n\t\t\t\t\tDEFENDING: \"40\",\n\t\t\t\t\tPHYSICAL: \"76\",\n\t\t\t\t\tLOADDATE: \"2018-09-19 12:10:05\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tNAME: \"Ronaldo\",\n\t\t\t\t\tCLUB: \"Icons\",\n\t\t\t\t\tLEAGUE: \"Icons\",\n\t\t\t\t\tPOSITION: \"ST\",\n\t\t\t\t\tTIER: \"Gold\",\n\t\t\t\t\tRATING: \"96\",\n\t\t\t\t\tPACE: \"97\",\n\t\t\t\t\tSHOOTING: \"95\",\n\t\t\t\t\tPASSING: \"81\",\n\t\t\t\t\tDRIBBLING: \"95\",\n\t\t\t\t\tDEFENDING: \"45\",\n\t\t\t\t\tPHYSICAL: \"76\",\n\t\t\t\t\tLOADDATE: \"2018-09-19 12:10:05\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tNAME: \"Pelé\",\n\t\t\t\t\tCLUB: \"Icons\",\n\t\t\t\t\tLEAGUE: \"Icons\",\n\t\t\t\t\tPOSITION: \"CF\",\n\t\t\t\t\tTIER: \"Gold\",\n\t\t\t\t\tRATING: \"95\",\n\t\t\t\t\tPACE: \"96\",\n\t\t\t\t\tSHOOTING: \"93\",\n\t\t\t\t\tPASSING: \"90\",\n\t\t\t\t\tDRIBBLING: \"95\",\n\t\t\t\t\tDEFENDING: \"56\",\n\t\t\t\t\tPHYSICAL: \"75\",\n\t\t\t\t\tLOADDATE: \"2018-09-19 12:10:05\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tNAME: \"Diego Maradona\",\n\t\t\t\t\tCLUB: \"Icons\",\n\t\t\t\t\tLEAGUE: \"Icons\",\n\t\t\t\t\tPOSITION: \"CAM\",\n\t\t\t\t\tTIER: \"Gold\",\n\t\t\t\t\tRATING: \"95\",\n\t\t\t\t\tPACE: \"88\",\n\t\t\t\t\tSHOOTING: \"91\",\n\t\t\t\t\tPASSING: \"90\",\n\t\t\t\t\tDRIBBLING: \"95\",\n\t\t\t\t\tDEFENDING: \"42\",\n\t\t\t\t\tPHYSICAL: \"75\",\n\t\t\t\t\tLOADDATE: \"2018-09-19 12:10:05\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tNAME: \"Ronaldo\",\n\t\t\t\t\tCLUB: \"Icons\",\n\t\t\t\t\tLEAGUE: \"Icons\",\n\t\t\t\t\tPOSITION: \"ST\",\n\t\t\t\t\tTIER: \"Gold\",\n\t\t\t\t\tRATING: \"94\",\n\t\t\t\t\tPACE: \"93\",\n\t\t\t\t\tSHOOTING: \"93\",\n\t\t\t\t\tPASSING: \"80\",\n\t\t\t\t\tDRIBBLING: \"93\",\n\t\t\t\t\tDEFENDING: \"46\",\n\t\t\t\t\tPHYSICAL: \"80\",\n\t\t\t\t\tLOADDATE: \"2018-09-19 12:10:05\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tNAME: \"Ronaldinho\",\n\t\t\t\t\tCLUB: \"Icons\",\n\t\t\t\t\tLEAGUE: \"Icons\",\n\t\t\t\t\tPOSITION: \"LW\",\n\t\t\t\t\tTIER: \"Gold\",\n\t\t\t\t\tRATING: \"94\",\n\t\t\t\t\tPACE: \"92\",\n\t\t\t\t\tSHOOTING: \"90\",\n\t\t\t\t\tPASSING: \"91\",\n\t\t\t\t\tDRIBBLING: \"95\",\n\t\t\t\t\tDEFENDING: \"37\",\n\t\t\t\t\tPHYSICAL: \"81\",\n\t\t\t\t\tLOADDATE: \"2018-09-19 12:10:05\"\n\t\t\t\t},\n\t\t\t\t]\n\t\t}\n    }\n    /** This function will query the database for a particular player\n     * \n     * @param {string} header \n     */\n    getPlayer(header) {\n        //var mostViewedPosts = firebase.database().ref('Players').orderByChild('NAME').equalTo(\"Lionel Messi\").then(function(snapshot) {\n\n\t\t//});\n    }\n    render() {\n        return (\n\t\t\t<div \n\t\t\tclassName=\"ag-theme-balham-dark\"\n\t\t\tstyle={{ \n\t\t\theight: '70vh', \n\t\t\twidth: '65vw'}} \n\t\t  >\n\t\t\t<AgGridReact\n\t\t\t  columnDefs={columns}\n\t\t\t  rowData={this.state.rows} onGridReady={(params)=> {params.api.sizeColumnsToFit()}}>\n\t\t\t</AgGridReact>\n\t\t  </div>);\n    }\n}","//import firebase from '../Firebase/firebase';\nimport React,{Component} from 'react';\nimport {AgGridReact} from 'ag-grid-react'\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham-dark.css';\n//var database = firebase.database();\n\n/** Column config, field = name in JSON, headerName = how you would like to display it on website\n *  For information regarding datatable API\n * @see https://www.ag-grid.com/documentation-main/documentation.php\n */\nconst columns = [\n    { field: 'NAME', headerName: 'Name', },\n    { field: 'RATING', headerName: 'Overall' },\n\t{ field: 'POSITION', headerName: 'Position' }];\nconst gridOptions = {\n\n\n};\n/** This is the main class for displaying the player database for the Draft Page\n *  \n * @author goethel\n * @param props default props for a react component\n * \n * Changelog:\n * 10/25 - file and class created - goethel\n */\n  export default class PlayerDatabase extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tNAME: \"Messi\",\n\t\t\t\t\tCLUB: \"FC-Barcelona\",\n\t\t\t\t\tLEAGUE: \"BBVA\",\n\t\t\t\t\tPOSITION: \"LW\",\n\t\t\t\t\tTIER: \"Gold\",\n\t\t\t\t\tRATING: \"94\",\n\t\t\t\t\tPACE: \"92\",\n\t\t\t\t\tSHOOTING: \"90\",\n\t\t\t\t\tPASSING: \"91\",\n\t\t\t\t\tDRIBBLING: \"95\",\n\t\t\t\t\tDEFENDING: \"37\",\n\t\t\t\t\tPHYSICAL: \"81\",\n\t\t\t\t\tLOADDATE: \"2018-09-19 12:10:05\"\n\t\t\t\t},\n\t\t\t\t]\n\t\t}\n    }\n    /** This function will query the database for a particular player\n     * \n     * @param {string} header \n     */\n    getPlayer(header) {\n       // var mostViewedPosts = firebase.database().ref('Players').orderByChild('NAME').equalTo(\"Lionel Messi\").then(function(snapshot) {\n\n\t\t//});\n\t}\n\tsizeToFit() {\n\t\tthis.gridApi.sizeColumnsToFit()\n\t}\n    render() {\n        return (\n\t\t\t<div \n\t\t\tclassName=\"ag-theme-balham-dark\"\n\t\t\tstyle={{ \n\t\t\theight: '50vh', \n\t\t\twidth: '35vw'}}>\n\t\t\t<AgGridReact\n\t\t\t  columnDefs={columns}\n\t\t\t  rowData={this.state.rows} onGridReady={(params)=> {params.api.sizeColumnsToFit()}}>\n\t\t\t</AgGridReact>\n\t\t  </div>);\n    }\n}","import React from 'react';\nimport Formation from './Formation';\nimport CurrentDraft from './CurrentDraft';\nimport PlayerDatabase from './Components/Database.jsx';\nimport PlayerTeam from './Components/PlayerTeam.jsx';\nimport Button from '@material-ui/core/Button';\n/** This is the parent Component of all the components in the Draft Page, so that state can be shared easily\n * \n * @author shivi \n * \n * CHANGELOG\n * 11/01 Updated with documentation and a button linking to results page for testing - goethel\n * 10/30 Component Created - shivi\n */\nclass DraftPageMaster extends React.Component {\n    render() {\n        return(\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <h1>\n                    This is the shell of the Draft Page\n                    </h1>\n                </header>\n                <body className=\"draft-Body\">\n                    <CurrentDraft/>\n                    <PlayerDatabase></PlayerDatabase>\n                    <PlayerTeam></PlayerTeam>\n                    <Formation/>\n                    \n                </body>\n                <div>\n                <Button href=\"../../resultpage.html\" color=\"primary\" variant=\"contained\" className=\"results\">Results Page (TESTING ONLY)</Button>\n                </div>\n                \n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    Built with React.js\n                 </a>\n            </div>\n        )\n    }\n\n    currentDraft(){\n\n    }\n}\n\nexport default DraftPageMaster;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport DraftPageMaster from './DraftPageMaster';\n\nfunction App() {\n  return (\n    <DraftPageMaster/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}